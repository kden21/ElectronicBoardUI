{"ast":null,"code":"import _asyncToGenerator from \"K:/Coding/SolarLab/TechnicalTask/UI/Angular/ElectronicBoardUI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./user.service\";\nexport class AuthService {\n  constructor(http, userService) {\n    this.http = http;\n    this.userService = userService;\n  } //todo:переделать тип возвращаемого объекта\n\n\n  login(account) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.http.post('https://localhost:7097/v1/account/login', account).subscribe(response => {\n        if (response.userId !== undefined) {\n          _this.userService.getById(response.userId).subscribe(user => {\n            user.token = response.jwtToken;\n            localStorage.setItem('user', JSON.stringify(user));\n            window.location.reload();\n          });\n        }\n      });\n    })();\n  }\n\n  register(account) {\n    return this.http.post('https://localhost:7097/v1/account/register', account);\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.UserService));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAaA,OAAM,MAAOA,WAAP,CAAkB;EAEtBC,YAAoBC,IAApB,EAA8CC,WAA9C,EAAqE;IAAjD;IAA0B;EAC7C,CAHqB,CAIxB;;;EACQC,KAAK,CAACC,OAAD,EAAiB;IAAA;;IAAA;MAC1B,MAAM,KAAI,CAACH,IAAL,CAAUI,IAAV,CAA+B,yCAA/B,EAA0ED,OAA1E,EAAmFE,SAAnF,CAA6FC,QAAQ,IAAE;QAC3G,IAAIA,QAAQ,CAACC,MAAT,KAAoBC,SAAxB,EAAkC;UAChC,KAAI,CAACP,WAAL,CAAiBQ,OAAjB,CAAyBH,QAAQ,CAACC,MAAlC,EAA0CF,SAA1C,CAAqDK,IAAI,IAAG;YAC1DA,IAAI,CAACC,KAAL,GAAaL,QAAQ,CAACM,QAAtB;YACAC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAA7B;YACAO,MAAM,CAACC,QAAP,CAAgBC,MAAhB;UACD,CAJD;QAKD;MACF,CARK,CAAN;IAD0B;EAU3B;;EAEDC,QAAQ,CAACjB,OAAD,EAAiB;IACvB,OAAO,KAAKH,IAAL,CAAUI,IAAV,CAAyB,4CAAzB,EAAuED,OAAvE,CAAP;EACD;;AAnBqB;;;mBAAXL,aAAWuB;AAAA;;;SAAXvB;EAAWwB,SAAXxB,WAAW;EAAAyB,YAJV","names":["AuthService","constructor","http","userService","login","account","post","subscribe","response","userId","undefined","getById","user","token","jwtToken","localStorage","setItem","JSON","stringify","window","location","reload","register","i0","factory","providedIn"],"sourceRoot":"","sources":["K:\\Coding\\SolarLab\\TechnicalTask\\UI\\Angular\\ElectronicBoardUI\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {IAccount} from \"../models/account\";\r\nimport {UserService} from \"./user.service\";\r\nimport {IUser, StatusRole} from \"../models/user\";\r\nimport {ILoginResponse} from \"../models/loginResponse\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class AuthService{\r\n\r\n  constructor(private http: HttpClient, private userService:UserService) {\r\n  }\r\n//todo:переделать тип возвращаемого объекта\r\n  async login(account:IAccount){\r\n    await this.http.post<ILoginResponse>('https://localhost:7097/v1/account/login', account).subscribe(response=> {\r\n      if (response.userId !== undefined){\r\n        this.userService.getById(response.userId).subscribe( user => {\r\n          user.token = response.jwtToken;\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n          window.location.reload();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  register(account:IAccount): Observable<IAccount>{\r\n    return this.http.post<IAccount>('https://localhost:7097/v1/account/register', account);\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}